version: "3.8"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    healthcheck:
      test: ["CMD", "sh", "-c", "nc -z localhost 2181"]
      interval: 10s
      timeout: 5s
      retries: 10

  kafka:
    image: confluentinc/cp-kafka:7.0.0
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "sh", "-c", "nc -z localhost 9092"]
      interval: 10s
      timeout: 5s
      retries: 10

  redis:
    image: redis:6.2
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ad_tracking
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data

  ad-service:
    build: .
    ports:
      - "8080:8080"
    environment:
      HTTP_PORT: ${HTTP_PORT}
      KAFKA_BROKERS: ${KAFKA_BROKERS}
      KAFKA_TOPIC: ${KAFKA_TOPIC}
      REDIS_URL: ${REDIS_URL}
      DATABASE_URL: postgres://postgres:password@postgres:5432/ad_tracking?sslmode=disable
      METRICS_PORT: ${METRICS_PORT}
      READ_TIMEOUT: ${READ_TIMEOUT}
      WRITE_TIMEOUT: ${WRITE_TIMEOUT}
    depends_on:
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy

volumes:
  postgres_data: